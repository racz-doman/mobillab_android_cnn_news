plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'jacoco'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

jacoco {
    toolVersion = '0.8.1'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"




    defaultConfig {
        applicationId "com.moblab.cnn_news"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    testOptions {
        animationsDisabled true
        unitTests {

            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

dependencies {
    implementation kotlinDependencies.stdlib

    implementation platform('com.google.firebase:firebase-bom:28.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    //implementation 'com.google.android.gms:play-services-analytics:10.2.4'

    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    implementation daggerDependencies.dagger
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    kapt daggerDependencies.compiler
    api daggerDependencies.annotation

    testImplementation daggerDependencies.dagger
    testImplementation daggerDependencies.annotation
    kaptTest daggerDependencies.compiler

    implementation supportDependencies.appcompat
    implementation supportDependencies.cardview
    implementation supportDependencies.design

    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.robolectric
    testImplementation unitTestDependencies.mockito

    androidTestImplementation daggerDependencies.dagger
    androidTestImplementation daggerDependencies.annotation
    kaptAndroidTest daggerDependencies.compiler

    def room_version = "2.2.5"

    implementation toolkitDependencies.okhttp
    implementation toolkitDependencies.logging
    implementation toolkitDependencies.retrofit
    implementation toolkitDependencies.retrofitGsonConverter
    implementation toolkitDependencies.gson
    implementation toolkitDependencies.glide
    implementation toolkitDependencies.eventbus

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

// optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}